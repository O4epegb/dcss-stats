{
  "parser": "@typescript-eslint/parser",
  "plugins": ["@typescript-eslint", "import"],
  "extends": [
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:@typescript-eslint/recommended",
    "prettier"
  ],
  "env": {
    "es6": true,
    "browser": true,
    "node": true
  },
  "settings": {
    "react": {
      "version": "detect"
    }
  },
  "rules": {
    "import/newline-after-import": ["warn", { "count": 1 }],
    "import/order": [
      "warn",
      {
        "groups": ["external", "builtin", "parent", "sibling", "internal", "index", "object"],
        "pathGroups": [
          {
            "pattern": "./*.module.css",
            "group": "object"
          },
          {
            "pattern": "~**",
            "group": "parent",
            "position": "before"
          },
          {
            "pattern": "~**/**",
            "group": "parent",
            "position": "before"
          }
        ],
        "pathGroupsExcludedImportTypes": []
      }
    ],
    "no-duplicate-imports": ["error", { "includeExports": true }],
    "object-shorthand": ["error", "always"],
    "react/react-in-jsx-scope": "off",
    "react/display-name": "off",
    "no-console": ["warn"],
    "react/prop-types": "off",
    "react/jsx-curly-brace-presence": "warn",
    "react/jsx-sort-props": [
      "warn",
      {
        "callbacksLast": true,
        "shorthandFirst": true,
        "reservedFirst": true,
        "noSortAlphabetically": true
      }
    ],
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/explicit-member-accessibility": "off",
    "@typescript-eslint/indent": "off",
    "@typescript-eslint/member-delimiter-style": "off",
    "@typescript-eslint/no-explicit-any": "off",
    "@typescript-eslint/no-var-requires": "off",
    "@typescript-eslint/no-use-before-define": "off",
    "@typescript-eslint/no-unused-vars": [
      "warn",
      {
        "argsIgnorePattern": "^_"
      }
    ],
    "no-restricted-imports": [
      "error",
      {
        "paths": [
          {
            "name": "lodash",
            "message": "Please use lodash-es instead."
          }
        ],
        "patterns": ["lodash-es/*"]
      }
    ]
  }
}
